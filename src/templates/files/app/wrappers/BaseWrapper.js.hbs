const Client = require('./Client')

/**
 *  {{capitalize entity_plural_name }} API
 *  API Rest que define endpoints para la entidad {{capitalize entity_plural_name }}
 */
class {{capitalize entity_name }}API extends Client {
  constructor (credentials = {}) {
    let config = Object.assign({}, Client.defaultConfig, credentials)
    super(config)

    this.config.service = 'acavalaapp' // <== https://api.foundard.com/v1/acavalaapp
    this.config.versionApi = 'v1'

    this.apiListar{{capitalize entity_plural_name }} = this.apiListar{{capitalize entity_plural_name }}
    this.apiCrear{{capitalize entity_name }} = this.apiCrear{{capitalize entity_name }}
    this.apiDetallar{{capitalize entity_name }} = this.apiDetallar{{capitalize entity_name }}
    this.apiActualizar{{capitalize entity_name }} = this.apiActualizar{{capitalize entity_name }}
    this.apiBorrar{{capitalize entity_name }} = this.apiBorrar{{capitalize entity_name }}
  }

  /**
   * Listar {{capitalize entity_plural_name }}
   * ==============================
   *
   * @param {string} accessToken - Access Token
   * @param {object} q - Objeto QueryString
   *
   * @return {promise} promesa de axios:
   * @see https://github.com/axios/axios
   */
  apiListar{{capitalize entity_plural_name }} (accessToken, q = {}) {
    return this.request({
      path: '{{lowercase entity_plural_name }}', // <== https://api.foundard.com/v1/acavalaapp/{{lowercase entity_plural_name}}
      method: 'GET',
      query: q,
      headers: {
        'Authorization': `Barear ${accessToken}`
      }
    })
  }

  /**
   * Crear {{capitalize entity_name }}
   * ==============================
   *
   * @param {string} accessToken - Access Token
   * @param {object} payload Process Data Object
   *
   * @return {promise} - promesa de axios:
   * @see https://github.com/axios/axios
   */
  apiCrear{{capitalize entity_name }} (accessToken, payload = {}) {
    return this.request({
      path: '{{lowercase entity_plural_name }}',
      method: 'POST',
      data: payload,
      headers: {
        'Authorization': `Barear ${accessToken}`
      }
    })
  }

  /**
   * Crear Bulk {{capitalize entity_plural_name }}
   * ==============================
   *
   * @param {string} accessToken - Access Token
   * @param {object} payload Process Data Object
   *
   * @return {promise} - promesa de axios:
   * @see https://github.com/axios/axios
   */
  apiCrearBulk{{capitalize entity_plural_name }} (accessToken, payload = {}) {
    return this.request({
      path: `{{lowercase entity_plural_name }}/_bulk`,
      method: 'POST',
      data: payload,
      headers: {
        'Authorization': `Barear ${accessToken}`
      }
    })
  }

  /**
   * Detallar {{capitalize entity_name }}
   * ==============================
   *
   * @param {string} accessToken - Access Token
   * @param {string} {{lowercase entity_name }}Id {{capitalize entity_name }} Id
   * @param {object} q - Objeto de QueryString
   *
   * @return {promise} - promesa de axios:
   * @see https://github.com/axios/axios
   */
  apiDetallar{{capitalize entity_name }} (accessToken,{{lowercase entity_name }}Id = '', q = {}) {
    return this.request({
      path: `{{lowercase entity_plural_name }}/${`{{lowercase entity_name }}Id`}`,
      method: 'GET',
      query: q,
      headers: {
        'Authorization': `Barear ${accessToken}`
      }
    })
  }

  /**
   * Actualizar {{capitalize entity_name }}
   * ==============================
   *
   * @param {string} accessToken - Access Token
   * @param {string} accessToken {{capitalize entity_name }} Id
   * @param {object} payload Process Data Object
   *
   * @return {promise} - promesa de axios:
   * @see https://github.com/axios/axios
   */
  apiActualizar{{capitalize entity_name }} (accessToken, {{lowercase entity_name }}Id = '', payload = {}) {
    return this.request({
      path: `{{lowercase entity_plural_name }}/${`{{lowercase entity_name }}Id`}`,
      method: 'POST',
      data: payload,
      headers: {
        'Authorization': `Barear ${accessToken}`
      }
    })
  }

  /**
   * Borrar {{capitalize entity_name }}
   * ==============================
   *
   * @param {string} accessToken - Access Token
   * @param {string} accessToken {{capitalize entity_name }} Id
   *
   * @return {promise} - promesa de axios:
   * @see https://github.com/axios/axios
   */
  apiBorrar{{capitalize entity_name }} (accessToken, {{lowercase entity_name }}Id = '') {
    return this.request({
      path: `{{lowercase entity_plural_name }}/${`{{lowercase entity_name }}Id`}`,
      method: 'DELETE',
      headers: {
        'Authorization': `Barear ${accessToken}`
      }
    })
  }
}

module.exports = {{capitalize entity_name }}API